class ArrayStack:

    def __init__(self):
        self.data = []

    def size(self):
        return len(self.data)

    def isEmpty(self):
        return self.size() == 0

    def push(self, item):
        self.data.append(item)

    def pop(self):
        return self.data.pop()

    def peek(self):
        return self.data[-1]

prec = {
    '*': 3, '/': 3,
    '+': 2, '-': 2,
    '(': 1
}

def solution(S):
    opStack = ArrayStack()
    answer = ''
    
    for s in S :
        
        if s in prec or s == ')' :
            if not opStack.isEmpty() :
                if s == ')' :
                    while opStack.peek() != '(':
                        answer += opStack.pop()
                    opStack.pop()                   
                elif s != '('  and prec[s] < prec[opStack.peek()] :
                        answer += opStack.pop()
                        if not opStack.isEmpty() :
                            if opStack.peek() != '(' :
                                answer += opStack.pop()
                        opStack.push(s)
                elif s == '('  and prec[s] < prec[opStack.peek()]  :
                    opStack.push(s)
                elif prec[s] == prec[opStack.peek()] :
                    # while prec[s] <= prec[opStack.peek()] : 
                    answer += opStack.pop()
                    opStack.push(s)
                
                else :
                    opStack.push(s)
            else : 
                opStack.push(s)
        else :
            answer += s
            
    while not opStack.isEmpty():
        answer += opStack.pop()
            
    
    return answer
